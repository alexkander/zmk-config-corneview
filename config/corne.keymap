#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    behaviors {
        mo_l: momentary_layer_left {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&mo 4>;

            tapping-term-ms = <200>;
            label = "Momentary layers left";
        };

        mo_r: momentary_layer_right {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&mo 3>, <&mo 5>;

            tapping-term-ms = <200>;
            label = "Momentary layers right";
        };
    };

    macros {
        tab: tab_behavior {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&mo 6>;

            label = "Tab behavior";
        };
        
        zed_em_kay: zed_em_kay {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LSHFT>, <&macro_tap>, <&kp Z &kp M &kp K>, <&macro_release>, <&kp LSHFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&lt 3 TAB  &kp SEMI  &kp COMMA  &kp DOT   &kp P  &kp Y        &kp F    &kp G  &kp C          &kp R  &kp L  &kp BSPC
&kp LSHFT  &kp A     &kp O      &kp E     &kp U  &kp I        &kp D    &kp H  &kp T          &kp N  &kp S  &mt RIGHT_SHIFT SQT
&kp LCTRL  &kp SQT   &kp Q      &kp J     &kp K  &kp X        &kp B    &kp M  &kp W          &kp V  &kp Z  &mt RIGHT_CONTROL ESC
                                &kp LALT  &mo_l  &kp SPACE    &kp RET  &mo_r  &kp RIGHT_WIN
            >;
        };

        qwerty {
            bindings = <
&lt 3 TAB  &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y    &kp U  &kp I          &kp O    &kp P     &kp BSPC
&kp LSHFT  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H    &kp J  &kp K          &kp L    &kp SEMI  &mt RSHIFT SQT
&kp LCTRL  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N    &kp M  &kp COMMA      &kp DOT  &kp FSLH  &mt RCTRL ESC
                         &kp LEFT_ALT  &mo_l  &kp SPACE    &kp RET  &mo_r  &kp RIGHT_WIN
            >;
        };

        lower {
            bindings = <
&kp TAB       &kp N1  &kp N2  &kp N3    &kp N4   &kp N5       &kp N6    &kp N7    &kp N8         &kp N9     &kp N0     &kp BACKSPACE
&mt LSHFT F1  &kp F2  &kp F3  &kp F4    &kp F5   &kp F6       &kp HOME  &kp INS   &kp UP         &kp DEL    &kp PG_UP  &mt RSHIFT DEL
&mt LCTRL F7  &kp F8  &kp F9  &kp F10   &kp F11  &kp F12      &kp END   &kp LEFT  &kp DOWN       &kp RIGHT  &kp PG_DN  &kp RCTRL
                              &kp LALT  &none    &kp SPACE    &kp RET   &mo 6     &kp RIGHT_WIN
            >;
        };

        raise {
            bindings = <
&kp TAB     &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp STAR       &kp LPAR  &kp RPAR  &kp BACKSPACE
&kp LSHIFT  &tab      &none   &none     &none     &none        &kp MINUS  &kp EQUAL  &kp LBKT       &kp RBKT  &kp FSLH  &mt RSHIFT GRAVE
&kp LCTRL   &none     &none   &none     &none     &none        &kp UNDER  &kp PLUS   &kp LBRC       &kp RBRC  &kp BSLH  &mt RCTRL TILDE
                              &kp LALT  &mo 6     &kp SPACE    &kp RET    &none      &kp RIGHT_WIN
            >;
        };

        numpad {
            bindings = <
&none  &none  &none  &none  &none  &none    &kp KP_DOT    &kp KP_N7     &kp KP_N8  &kp KP_N9  &kp KP_MINUS   &kp KP_PLUS
&none  &none  &none  &none  &none  &none    &kp KP_COMMA  &kp KP_N4     &kp KP_N5  &kp KP_N6  &kp KP_DIVIDE  &kp KP_MULTIPLY
&none  &none  &none  &none  &none  &none    &kp KP_N0     &kp KP_N1     &kp KP_N2  &kp KP_N3  &kp KP_LPAR    &kp KP_RPAR
                     &none  &none  &none    &kp KP_ENTER  &kp KP_EQUAL  &kp DEL
            >;
        };

        multimedia {
            bindings = <
&none  &none         &none       &none       &none       &none         &none  &none  &none  &none  &none  &none
&none  &kp C_VOL_UP  &kp K_PREV  &kp C_PLAY  &kp C_STOP  &kp C_NEXT    &none  &none  &none  &none  &none  &none
&none  &kp C_VOL_DN  &kp C_MUTE  &none       &none       &none         &none  &none  &none  &none  &none  &none
                                 &none       &none       &none         &none  &none  &none
            >;
        };

        adjust {
            bindings = <
&none  &none  &none  &kp TAB     &kp LS(TAB)  &zed_em_kay          &kp CAPSLOCK  &tog 1      &bt BT_PRV  &bt BT_NXT  &bt BT_CLR    &none
&none  &none  &none  &none       &none        &none                &kp KP_NUM    &mkp LCLK   &mkp RCLK   &mkp MCLK   &mkp MB4      &mkp MB5
&none  &none  &none  &none       &none        &ext_power EP_TOG    &soft_off     &bl BL_TOG  &bl BL_INC  &bl BL_DEC  &bl BL_CYCLE  &none
                     &sys_reset  &none        &none                &none         &none       &none
            >;
        };
    };
};
